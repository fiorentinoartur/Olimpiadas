// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi_desktop2020.Contexts;

#nullable disable

namespace webapi_desktop2020.Migrations
{
    [DbContext(typeof(DesktopContext))]
    [Migration("20240103182916_Bd_01")]
    partial class Bd_01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi_desktop2020.Domains.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Comentario");

                    b.Property<DateTime?>("DataHoraComentario")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdJogo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdJogo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentario", (string)null);
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Jogadore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NumeroCamisa")
                        .HasColumnType("int");

                    b.Property<int?>("PosicaoId")
                        .HasColumnType("int");

                    b.Property<int?>("SelecaoId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Jogadore__3214EC070C973F75");

                    b.HasIndex("PosicaoId");

                    b.HasIndex("SelecaoId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<int?>("PlacarCasa")
                        .HasColumnType("int");

                    b.Property<int?>("PlacarVisitante")
                        .HasColumnType("int");

                    b.Property<int?>("RodadaId")
                        .HasColumnType("int");

                    b.Property<int?>("SelecaoCasaId")
                        .HasColumnType("int");

                    b.Property<int?>("SelecaoVisitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Jogos__3214EC070BF97C52");

                    b.HasIndex("RodadaId");

                    b.HasIndex("SelecaoCasaId");

                    b.HasIndex("SelecaoVisitanteId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Notificaco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraEnvio")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Importancia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SelecaoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07FD9C086F");

                    b.HasIndex("SelecaoId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.NotificacoesUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NotificacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07A75430E3");

                    b.HasIndex("NotificacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("NotificacoesUsuarios");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Posico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Posicoes__3214EC0716494D87");

                    b.ToTable("Posicoes");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Rodada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Rodadas__3214EC072DBACA62");

                    b.ToTable("Rodadas");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Seleco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Selecoes__3214EC0737AB6A8F");

                    b.ToTable("Selecoes");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("image");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Perfil")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("perfil")
                        .IsFixedLength();

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("TimeFavoritoId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC07130AD5BE");

                    b.HasIndex("TimeFavoritoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Comentario", b =>
                {
                    b.HasOne("webapi_desktop2020.Domains.Jogo", "IdJogoNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdJogo")
                        .HasConstraintName("FK_Comentario_Jogos");

                    b.HasOne("webapi_desktop2020.Domains.Usuario", "IdUsuarioNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Comentario_Usuarios");

                    b.Navigation("IdJogoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Jogadore", b =>
                {
                    b.HasOne("webapi_desktop2020.Domains.Posico", "Posicao")
                        .WithMany("Jogadores")
                        .HasForeignKey("PosicaoId")
                        .HasConstraintName("FK_Jogadores_Posicoes");

                    b.HasOne("webapi_desktop2020.Domains.Seleco", "Selecao")
                        .WithMany("Jogadores")
                        .HasForeignKey("SelecaoId")
                        .HasConstraintName("FK_Jogadores_Selecoes");

                    b.Navigation("Posicao");

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Jogo", b =>
                {
                    b.HasOne("webapi_desktop2020.Domains.Rodada", "Rodada")
                        .WithMany("Jogos")
                        .HasForeignKey("RodadaId")
                        .HasConstraintName("FK_Jogos_Rodadas");

                    b.HasOne("webapi_desktop2020.Domains.Seleco", "SelecaoCasa")
                        .WithMany("JogoSelecaoCasas")
                        .HasForeignKey("SelecaoCasaId")
                        .HasConstraintName("FK_Jogos_Selecoes");

                    b.HasOne("webapi_desktop2020.Domains.Seleco", "SelecaoVisitante")
                        .WithMany("JogoSelecaoVisitantes")
                        .HasForeignKey("SelecaoVisitanteId")
                        .HasConstraintName("FK_Jogos_Selecoes1");

                    b.Navigation("Rodada");

                    b.Navigation("SelecaoCasa");

                    b.Navigation("SelecaoVisitante");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Notificaco", b =>
                {
                    b.HasOne("webapi_desktop2020.Domains.Seleco", "Selecao")
                        .WithMany("Notificacos")
                        .HasForeignKey("SelecaoId")
                        .HasConstraintName("FK_Notificacoes_Selecoes");

                    b.Navigation("Selecao");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.NotificacoesUsuario", b =>
                {
                    b.HasOne("webapi_desktop2020.Domains.Notificaco", "Notificacao")
                        .WithMany("NotificacoesUsuarios")
                        .HasForeignKey("NotificacaoId")
                        .HasConstraintName("FK_NotificacoesUsuarios_Notificacoes");

                    b.HasOne("webapi_desktop2020.Domains.Usuario", "Usuario")
                        .WithMany("NotificacoesUsuarios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_NotificacoesUsuarios_Usuarios");

                    b.Navigation("Notificacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Usuario", b =>
                {
                    b.HasOne("webapi_desktop2020.Domains.Seleco", "TimeFavorito")
                        .WithMany("Usuarios")
                        .HasForeignKey("TimeFavoritoId")
                        .HasConstraintName("FK_Usuarios_Selecoes");

                    b.Navigation("TimeFavorito");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Jogo", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Notificaco", b =>
                {
                    b.Navigation("NotificacoesUsuarios");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Posico", b =>
                {
                    b.Navigation("Jogadores");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Rodada", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Seleco", b =>
                {
                    b.Navigation("Jogadores");

                    b.Navigation("JogoSelecaoCasas");

                    b.Navigation("JogoSelecaoVisitantes");

                    b.Navigation("Notificacos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("webapi_desktop2020.Domains.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("NotificacoesUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
